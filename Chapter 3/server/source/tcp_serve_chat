

#if defined(_WIN16) || defined(_WIN32) || defined(_WIN64) || defined(__WIN__) || defined(__TOS_WIN__) || defined(__WINDOWS__)

    #define crap_os

    #if not defined(_WIN32_WINNT)
        #define _WIN32_WINNT 0x0600
    #endif

    #include <winsock2.h>
    #include <w2tcpip.h>

    #pragma comment(lib, "ws2_32.lib")

    #define valid_socket(the_socket) (the_socket != INVALID_SOCKET)
    #define close_socket(the_socket) (closesocket(the_socket))
    #define get_socket_errno() (WSAGetLastError())
    #define has_keyboard_input(socket_set) (_kbhit())
    #define get_socket_option(this_sock, e_code, e_code_size) (getsockopt(this_sock, SOL_SOCKET, SO_ERROR, (char *) &e_code, &e_code_size) == SOCKET_ERROR)
    #define is_std_socket(sock) (\
        sock == STD_INPUT_HANDLE ||\
        sock == STD_OUTPUT_HANDLE ||\
        sock == STD_ERROR_HANDLE\
    )
    #define INPUT_SOCK STD_INPUT_HANDLE
    #define OUTPUT_SOCK STD_OUTPUT_HANDLE
    #define ERR_SOCK STD_ERROR_HANDLE

    #define socket_type SOCKET

#else

    #define unix_os

    #if not defined(_SYS_TYPES_H_)
        #include <sys/types.h>
    #endif

    #if not defined(_SYS_SOCKET_H_)
        #include <sys/socket.h>
    #endif

    #if not defined(_NETINET_IN_H_)
        #include <netinet/in.h>
    #endif
    
    #if not defined(_NETDB_H_)
        #include <netdb.h>
    #endif


    #if not defined(_ARPA_INET_H_)
        #include <arpa/inet.h>
    #endif

    #if not defined(_UNISTD_H_)
        #include <unistd.h>
    #endif

    #if not defined(_LIBCPP_ERRNO_H)
        #include <errno.h>
    #endif


    #define valid_socket(the_socket) (the_socket >= 0)
    #define close_socket(the_socket) (close(the_socket))
    #define get_socket_errno() (errno)
    #define has_keyboard_input(socket_set) (FD_ISSET(STDIN_FILENO, &socket_set))
    #define get_socket_option(this_sock, e_code, e_code_size) (getsockopt(this_sock, SOL_SOCKET, SO_ERROR, &e_code, &e_code_size) == -1)
    #define is_std_socket(sock) (\
        sock == STDIN_FILENO ||\
        sock == STDOUT_FILENO ||\
        sock == STDERR_FILENO\
    )

    #define socket_type int
    
    #define INPUT_SOCK STDIN_FILENO
    #define OUTPUT_SOCK STDOUT_FILENO
    #define ERR_SOCK STDERR_FILENO

#endif

#if defined(unix_os) && not defined(_LIBCPP_STDIO_H) // NEED to add check for crap os (windows)
    #include <stdio.h>
#endif

#if defined(unix_os) && not defined(_LIBCPP_STRING_H) // NEED to add check for crap os (windows)
    #include <string.h>
#endif

#define MACHINE_INIT_FAIL 1
#define MACHINE_ADDR_RET_FAIL 2
#define SOCKET_CREAT_FAIL 3
#define BIND_SOCKET_FAIL 4
#define LISTEN_SOCKET_FAIL 5
#define SEL_SOCKET_FAIL 6
#define NEW_CONNECT_FAIL 7
#define ILLEG_ARGS 8

#define buffer_size 100
#define kilo_byte 1024
#define four_kbytes 4096
#define listen_lim 20

#define default_port (char*) "8080"



bool is_caps(const char c);
bool is_lower(const char c);
bool same_char(const char a, const char b, bool ignore_case = true);
bool same_string(const char* first, const char* second, bool ignore_case = true);
char to_caps(const char c);
char to_lower(const char c);
void capitalize(char* the_string);
void lowerize(char* the_string);
int initialize();
int clean_up(socket_type max_socket);
int run_server(char* port = default_port);
socket_type max_socket(socket_type first, socket_type second);